CREATE TABLE IF NOT EXISTS users
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT users_pk PRIMARY KEY,
    email VARCHAR(255) NOT NULL
        CONSTRAINT users_pk2 UNIQUE,
    name  VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS category
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT category_pk PRIMARY KEY,
    name VARCHAR(50) NOT NULL
        CONSTRAINT category_pk2 UNIQUE
);

CREATE TABLE IF NOT EXISTS compilation
(
    id     INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT compilation_pk PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE NOT NULL,
    title  VARCHAR(128) NOT NULL
        CONSTRAINT compilation_pk2 UNIQUE
);

CREATE TABLE IF NOT EXISTS event
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT event_pk PRIMARY KEY,
    annotation         VARCHAR(2000) NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    category_id        INTEGER NOT NULL
        CONSTRAINT event_category_id_fk
            REFERENCES category
            ON UPDATE CASCADE ON DELETE RESTRICT,
    created            TIMESTAMP NOT NULL,
    event_date         TIMESTAMP NOT NULL,
    initiator_id       INTEGER NOT NULL
        CONSTRAINT event_users_id_fk
            REFERENCES users
            ON UPDATE CASCADE ON DELETE CASCADE,
    paid               BOOLEAN NOT NULL,
    participant_limit  INTEGER DEFAULT 0 NOT NULL,
    published          TIMESTAMP,
    request_moderation BOOLEAN DEFAULT TRUE NOT NULL,
    state              VARCHAR(15) NOT NULL,
    title              VARCHAR(255) NOT NULL,
    lat                DOUBLE PRECISION NOT NULL,
    lon                DOUBLE PRECISION NOT NULL
);

CREATE TABLE IF NOT EXISTS request
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT request_pk PRIMARY KEY,
    event_id     INTEGER NOT NULL
        CONSTRAINT request_event_id_fk
            REFERENCES event
            ON UPDATE CASCADE ON DELETE CASCADE,
    created      TIMESTAMP NOT NULL,
    requester_id INTEGER NOT NULL
        CONSTRAINT request_users_id_fk
            REFERENCES users
            ON UPDATE CASCADE ON DELETE CASCADE,
    status       VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS event_compilation_connection
(
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT event_compilation_connection_pk PRIMARY KEY,
    event_id       INTEGER NOT NULL
        CONSTRAINT event_compilation_connection_event_id_fk
            REFERENCES event
            ON UPDATE CASCADE ON DELETE CASCADE,
    compilation_id INTEGER NOT NULL
        CONSTRAINT event_compilation_connection_compilation_id_fk
            REFERENCES compilation
            ON UPDATE CASCADE ON DELETE CASCADE
);

create table if not exists comment
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT comment_pk PRIMARY KEY,
    content      VARCHAR(1000) NOT NULL,
    event_id  INTEGER NOT NULL
        CONSTRAINT comment_event_id_fk
            REFERENCES event
            ON UPDATE CASCADE ON DELETE CASCADE,
    author_id INTEGER NOT NULL
        CONSTRAINT comment_users_id_fk
            REFERENCES users
            ON UPDATE CASCADE ON DELETE CASCADE,
    created   TIMESTAMP NOT NULL
);
